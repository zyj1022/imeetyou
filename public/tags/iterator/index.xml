<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Iterator on 知也无涯</title>
    <link>/tags/iterator/</link>
    <description>Recent content in Iterator on 知也无涯</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>ZHIKING</copyright>
    <lastBuildDate>Fri, 31 Mar 2017 17:56:19 +0000</lastBuildDate>
    
	<atom:link href="/tags/iterator/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>设计模式之迭代器模式(Iterator)</title>
      <link>/post/2017/js-dp-iterator/</link>
      <pubDate>Fri, 31 Mar 2017 17:56:19 +0000</pubDate>
      
      <guid>/post/2017/js-dp-iterator/</guid>
      <description>&lt;p&gt;迭代器模式是一种相对简单的模式，简单到很多时候我们都不认为它是一种设计模式。目前的绝大部分语言都内置了迭代器。&lt;/p&gt;
&lt;p&gt;比如：JavaScript 的 &lt;code&gt;Array.prototype.forEach&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;jQuery里一个非常有名的迭代器就是 &lt;code&gt;$.each&lt;/code&gt; 方法，通过each我们可以传入额外的function，然后来对所有的item项进行迭代操作，例如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;$.each( [1, 2, 3], function( i, n ){
	console.log( &amp;#39;当前下标为： &amp;#39;+ i,&amp;#39;当前值为:&amp;#39; + n );
});

// 下标： 0 当前值:1
// 下标： 1 当前值:2
// 下标： 2 当前值:3
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>