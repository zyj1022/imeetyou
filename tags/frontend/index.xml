<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>frontend on 知也无涯</title><link>/tags/frontend/</link><description>Recent content in frontend on 知也无涯</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>ZHIKING</copyright><lastBuildDate>Wed, 01 Apr 2020 13:37:56 +0800</lastBuildDate><atom:link href="/tags/frontend/index.xml" rel="self" type="application/rss+xml"/><item><title>ZeroNet 使用指南</title><link>/post/2020/2020-04-01-zeronet/</link><pubDate>Wed, 01 Apr 2020 13:37:56 +0800</pubDate><guid>/post/2020/2020-04-01-zeronet/</guid><description>ZeroNet 使用指南 网络的大海里又发现一片新大陆，顺便记录一下。 什么是零网 ZeroNet ZeroNet 是一个以对等网络用户为基础构成的类互联网的分布式网络。ZeroNet的总</description></item><item><title>如何关闭常见浏览器的 https 功能</title><link>/post/2019/close-https/</link><pubDate>Wed, 08 May 2019 11:06:16 +0800</pubDate><guid>/post/2019/close-https/</guid><description>在日常开发的过程中，有时我们会想测试页面在 https 连接中的表现情况，这时 https 的存在会让调试不能方便的进行下去。 而且由于 https 并不是像 cookie 一样存放在浏览器缓</description></item><item><title>关于npm build错误的奇特问题</title><link>/post/2019/npm-build-err/</link><pubDate>Tue, 16 Apr 2019 13:27:36 +0800</pubDate><guid>/post/2019/npm-build-err/</guid><description>npm run build 后发生的问题： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 0 info it worked if it ends with ok 1 verbose cli [ &amp;#39;/usr/local/bin/node&amp;#39;, &amp;#39;/usr/local/bin/npm&amp;#39;, &amp;#39;start&amp;#39; ] 2 info using npm@6.9.0 3 info using node@v8.11.1 4 verbose run-script [ &amp;#39;prestart&amp;#39;, &amp;#39;start&amp;#39;, &amp;#39;poststart&amp;#39; ] 5 info lifecycle ui-new@1.0.0~prestart: ui-new@1.0.0 6 info lifecycle</description></item><item><title>如何构建自己的cli工具</title><link>/post/2018/myself-node-cli/</link><pubDate>Tue, 31 Jul 2018 12:49:46 +0800</pubDate><guid>/post/2018/myself-node-cli/</guid><description>如何构建自己的cli工具 我构建自己的cli工具的目的，是为了让自己封装的webpack及其配置可定制性更高，自己熟悉的配置不用重复配置，自己</description></item><item><title>掌握React生命周期(Lifecycle)</title><link>/post/2018/react-lifecycle/</link><pubDate>Tue, 03 Jul 2018 15:39:26 +0800</pubDate><guid>/post/2018/react-lifecycle/</guid><description>前言 首先, 当面对一些问题: 1 React 用了这么久，经常遇到的问题是setState在这里写合适吗？ 2 为什么setState写在这里造成了重复渲染多次</description></item><item><title>React 代码复用的问题 - Higher-Order Components</title><link>/post/2018/react-hoc/</link><pubDate>Fri, 15 Jun 2018 16:05:26 +0800</pubDate><guid>/post/2018/react-hoc/</guid><description>代码复用，我们很容易想到组件。组件确实也是 React 中最主要的复用单元。大部分情况下是满足需求的，但有一些例外的情况。 问题/The problem 假如我们有个展示</description></item><item><title>Atom和VSCode的插件同步方法</title><link>/post/2018/atom-vscode-sync-settings/</link><pubDate>Sat, 12 May 2018 10:49:46 +0800</pubDate><guid>/post/2018/atom-vscode-sync-settings/</guid><description>在我们换电脑和开发环境的时候，自己使用编辑器的一些插件，往往还的重新下载，不过现在这些编辑器提供了，同步方法，下面就简单说一下，不同电脑如何</description></item><item><title>前端常用插件、工具类库汇总</title><link>/post/2018/front-end-libary/</link><pubDate>Wed, 09 May 2018 12:49:46 +0800</pubDate><guid>/post/2018/front-end-libary/</guid><description>函数库 Lodash 动画库 Animate.css - CSS3 动画库，也是目前最通用的动画库 Anime.js - 一个强大的、轻量级的用来制作动画的javascript库 Hover.css - CSS hover 悬停效果，可以应用于链</description></item><item><title>学会这些有用的ES6</title><link>/post/2018/useful-es6/</link><pubDate>Fri, 27 Apr 2018 09:59:31 +0800</pubDate><guid>/post/2018/useful-es6/</guid><description>声明变量 用let不用var ES6之前我们用var声明一个变量，但是它有很多弊病： 因为没有块级作用域，很容易声明全局变量 变量提升 可以重复声明 还</description></item><item><title>原生JS 获取浏览器、窗口、元素等尺寸的方法及注意事项</title><link>/post/2018/js-window-height-width/</link><pubDate>Wed, 07 Mar 2018 09:19:11 +0800</pubDate><guid>/post/2018/js-window-height-width/</guid><description>一、通过浏览器获得屏幕的尺寸 屏幕分辨率的高：window.screen.height 屏幕分辨率的宽：window.screen.width 屏</description></item><item><title>Js动态获取iframe子页面的高度总结</title><link>/post/2018/js-iframe-height/</link><pubDate>Tue, 06 Mar 2018 13:32:08 +0800</pubDate><guid>/post/2018/js-iframe-height/</guid><description>问题 某个页面引用的是个动态高度的iframe，不希望iframe出现滚动条，只希望使用浏览器滚动条，这个时候我们就需要动态改变iframe的</description></item><item><title>前端利器，6款开源的Web性能优化辅助工具推荐</title><link>/post/2018/web-optimization-tool/</link><pubDate>Mon, 26 Feb 2018 13:07:21 +0800</pubDate><guid>/post/2018/web-optimization-tool/</guid><description>Web 性能优化是一个老生常谈的话题，也是前端页面开发十分重要的部分。当页面加载速度越慢，用户流失的概率就越大，性能和交互直接影响用户体验。 下面推</description></item><item><title>GitHub 项目徽章的添加和设置</title><link>/post/2017/github-badge/</link><pubDate>Tue, 02 May 2017 17:25:34 +0000</pubDate><guid>/post/2017/github-badge/</guid><description>许多同学在 GitHub 上发布了自己的开源项目，有辛苦开发的实用工具、构思巧妙的开源库、别具一格的 App、精心整理的示例代码等等。 自己花了大把时间和精力</description></item><item><title>typeof与instanceof的区别</title><link>/post/2017/js-typeof-instanceof/</link><pubDate>Sun, 26 Mar 2017 17:24:36 +0800</pubDate><guid>/post/2017/js-typeof-instanceof/</guid><description>typeof和instanceof都可以用来判断变量，它们的用法有很大区别： typeof：返回一个变量的基本类型，检测的是基本数据类型 ins</description></item><item><title>Javascript数组常见问题</title><link>/post/2017/js-array-issue/</link><pubDate>Thu, 23 Mar 2017 17:24:23 +0000</pubDate><guid>/post/2017/js-array-issue/</guid><description>1、删除数组里指定的某个元素 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 var arr = [3,2,3,3,5,3], val = 3; var removeElement = function(arr, elm) { for (var i = 0; i &amp;lt; arr.length; i++) { if (arr[i] == elm) { arr.splice(i, 1); i--; } } return arr; }; console.log(removeElement(arr, val)); // [2, 5]</description></item><item><title>Javascript定义类（class）的三种方法</title><link>/post/2017/js-class3/</link><pubDate>Thu, 23 Mar 2017 09:22:23 +0000</pubDate><guid>/post/2017/js-class3/</guid><description>在面向对象编程中，类（class）是对象（object）的模板，定义了同一组对象（又称&amp;quot;实例&amp;rdquo;）共有的属性和方法。 Ja</description></item><item><title>Javascript基础之数组</title><link>/post/2017/js-array-base/</link><pubDate>Wed, 22 Mar 2017 11:34:42 +0000</pubDate><guid>/post/2017/js-array-base/</guid><description>简介 数组是编程语言中应用最广泛的存储结构，在 ECMAScript 中数组是非常常用的引用类型。很有必要将数组的内容捋一遍，加深印象。 数组属性 constructor 表示引用数组对象的</description></item><item><title>Javascript 面向对象编程详解</title><link>/post/2017/js-oop/</link><pubDate>Sat, 18 Mar 2017 18:24:26 +0800</pubDate><guid>/post/2017/js-oop/</guid><description>Javascript是一种基于对象的语言，秉承一切皆对象的理念。 但是，它又不是一种真正的面向对象编程（OOP）语言，因为它的语法中没有cla</description></item><item><title>div嵌套水平垂直居中方法</title><link>/post/2017/div-center-middle/</link><pubDate>Sun, 12 Mar 2017 17:24:54 +0000</pubDate><guid>/post/2017/div-center-middle/</guid><description>总结当前知道的对div嵌套标签水平垂直居中方法，如果还有新的方法，请不吝赐教哦。好，下面开始列举代码咯。 首先给需要实现水平垂直居中的两个di</description></item><item><title>圣杯布局和双飞翼布局详解</title><link>/post/2017/div-the-holy-grail/</link><pubDate>Mon, 06 Mar 2017 12:35:54 +0000</pubDate><guid>/post/2017/div-the-holy-grail/</guid><description>事实上，圣杯布局其实和双飞翼布局是一回事。它们实现的都是三栏布局，两边的盒子宽度固定，中间盒子自适应，也就是我们常说的 固-比-固 布局。它们实</description></item><item><title>CSS中margin边界叠加问题及解决方案</title><link>/post/2017/css-margin-margin/</link><pubDate>Thu, 02 Mar 2017 09:25:34 +0000</pubDate><guid>/post/2017/css-margin-margin/</guid><description>边界叠加简介 边界叠加是一个相当简单的概念。但是，在实践中对网页进行布局时，它会造成许多混淆。 简单地说，当两个垂直边界相遇时，它们将形成一个边</description></item><item><title>重装node导致Hexo不能正常使用解决办法</title><link>/post/2016/hexo-node-err/</link><pubDate>Tue, 22 Nov 2016 10:40:15 +0000</pubDate><guid>/post/2016/hexo-node-err/</guid><description>Hexo 是一个简单地、轻量地、基于Node的一个静态博客框架。最近重装了node，导致在编译博客的时候，会出现很多依赖的错误。比如： 在使用hexo</description></item><item><title>前端速查表Flex-Bootstrap4-es6</title><link>/post/2016/flex-bootstrap4-es6/</link><pubDate>Thu, 17 Nov 2016 08:53:24 +0000</pubDate><guid>/post/2016/flex-bootstrap4-es6/</guid><description>Flexbox 属性速查表 Flex属性用多了自然记住,基本概念不再赘述不过还是简单罗列一下： 容器的属性有以下6个 flex-direction属性决定主轴的</description></item><item><title>如何在React Native中的使用自定义iconfont</title><link>/post/2016/react-native-iconfont/</link><pubDate>Tue, 15 Nov 2016 16:46:11 +0000</pubDate><guid>/post/2016/react-native-iconfont/</guid><description>React Native中的iconfont 关于在React Native中使用iconfont，网上已有很多非常好的解决方案，用的最多的就是 react-native-vector-icons, 这个库支</description></item><item><title>React Native 中组件的生命周期</title><link>/post/2016/react-native-lifecycle/</link><pubDate>Tue, 08 Nov 2016 12:23:46 +0000</pubDate><guid>/post/2016/react-native-lifecycle/</guid><description>概述 就像 Android 开发中的 View 一样，React Native（RN） 中的组件也有生命周期（Lifecycle）。所谓生命周期，就是一个对象从开始生成到最</description></item><item><title>mac格式化U盘方法（解决win下只有200MB的问题）</title><link>/post/2016/mac-u-format/</link><pubDate>Mon, 07 Nov 2016 09:44:34 +0000</pubDate><guid>/post/2016/mac-u-format/</guid><description>有些朋友会发现在Mac上格式化的U盘放到windows的电脑上就只剩下200MB了，这是因为你在格式化时选择了guid分区，而win上只能识</description></item><item><title>Angular2 英雄练级攻略</title><link>/post/2016/angular2-hero/</link><pubDate>Tue, 11 Oct 2016 17:44:34 +0000</pubDate><guid>/post/2016/angular2-hero/</guid><description>Angular2 英雄练级攻略</description></item><item><title>Mac下提升工作效率的方式</title><link>/post/2016/2016-05-16/</link><pubDate>Mon, 16 May 2016 00:00:00 +0000</pubDate><guid>/post/2016/2016-05-16/</guid><description>Mac系统一向以提供高效的工作环境著称，iOS，Android和server端程序员都可以轻松的在Mac上搭建舒适的开发环境。笔者主要从事i</description></item><item><title>mac终端命令大全</title><link>/post/2015/2015-12-31/</link><pubDate>Thu, 31 Dec 2015 00:00:00 +0000</pubDate><guid>/post/2015/2015-12-31/</guid><description>OSX 的文件系统 OSX 采用的Unix文件系统，所有文件都挂在跟目录 / 下面，所以不在要有Windows 下的盘符概念。 你在桌面上看到的硬盘都挂在 /Volumes 下。 比</description></item><item><title>2015年JavaScript 资源大全</title><link>/post/2015/1/</link><pubDate>Wed, 23 Dec 2015 00:00:00 +0000</pubDate><guid>/post/2015/1/</guid><description>GitHub 上有一个 Awesome – XXX 系列的资源整理。 awesome-javascript 是 sorrycc 发起维护的 JS 资源列表，内容包括：包管理器、加载器、测试框架、运行器、QA、MVC框架和库、模板引擎、数</description></item><item><title>CMD规范</title><link>/post/2015/2015-12-23/</link><pubDate>Wed, 23 Dec 2015 00:00:00 +0000</pubDate><guid>/post/2015/2015-12-23/</guid><description>cmd规范 (Common module Definition) 模块化到优点：简单友好的模块化定义规范，从根本上解决命名冲突，文件依赖等等的问题 seajs等等的模块化框架遵循的是cmd的模</description></item><item><title>Iconfont 字体图标字库</title><link>/post/2015/2015-11-03/</link><pubDate>Tue, 03 Nov 2015 00:00:00 +0000</pubDate><guid>/post/2015/2015-11-03/</guid><description>最近在研究icon font图标字库，觉得很有意思，于是找了一些比较好的在线字库。 大都是开源的，而且各有特色，推荐给大家！ 阿里icon font</description></item><item><title>常用中文字体的英文名称</title><link>/post/2015/1/</link><pubDate>Tue, 03 Nov 2015 00:00:00 +0000</pubDate><guid>/post/2015/1/</guid><description>宋体 SimSun 黑体 SimHei 微软雅黑 Microsoft YaHei 微软正黑体 Microsoft JhengHei 新宋体 NSimSun 新细明体 PMingLiU 细明体 MingLiU 标楷体 DFKai-SB 仿宋 FangSong 楷体 KaiTi 仿宋_GB2312 FangSong_GB2312 楷体_GB2312 KaiTi_GB2312 Mac OS的一些: 华</description></item><item><title>如何配置一个高效的Mac工作环境</title><link>/post/2015/2015-10-12/</link><pubDate>Mon, 12 Oct 2015 00:00:00 +0000</pubDate><guid>/post/2015/2015-10-12/</guid><description>强迫症的 Mac 设置指南 如何配置一个高效的 Mac 工作环境 Table of Contents OS X 功能键 全键盘控制 Spotlight 快捷键 输入法快捷键 其他快捷键 设置 Trackpad 轻拍以点击 语音 词典 Dock Position Remove all Dock icons[OCD] 重</description></item><item><title>iOS、mac开源项目及库</title><link>/post/2015/2015-07-31/</link><pubDate>Fri, 31 Jul 2015 00:00:00 +0000</pubDate><guid>/post/2015/2015-07-31/</guid><description>song#### UI 下拉刷新 EGOTableViewPullRefresh - 最早的下拉刷新控件。 SVPullToRefresh - 下拉刷新控件。 MJRefresh - 仅需一行代码就可以为UITableView或者CollectionView加上下拉</description></item><item><title>前端开发工具库</title><link>/post/2015/1/</link><pubDate>Thu, 30 Jul 2015 00:00:00 +0000</pubDate><guid>/post/2015/1/</guid><description>Windows 系统工具 前端开发 开发环境 NodeJS JDK + Tomcat (JAVA) Wamp (PHP) 原型工具 Visio 2013 流程图 Axure 7 交互 UID for Mobile 开发工具 Sublime Text 3 Eclipse 3.5 切图工具 Photoshop 3+ xScope 尺子 ColorPix 取色版 Dorado 标注 FastStone Capture 屏幕截图 ColorImpact 配色</description></item><item><title>团队规范文档</title><link>/post/2015/2015-07-30/</link><pubDate>Thu, 30 Jul 2015 00:00:00 +0000</pubDate><guid>/post/2015/2015-07-30/</guid><description>目录结构 引入亚信UED的基础前端框架，包括JS底层库，UI样式库，开发规范，自动化工具，团队知识库 引入cmd,seajs,nodejs,gr</description></item><item><title>样式库解决方案</title><link>/post/2015/2/</link><pubDate>Thu, 30 Jul 2015 00:00:00 +0000</pubDate><guid>/post/2015/2/</guid><description>样式库解决方案 目的 1. 提供可复用的模式 根本目的是为了代码资源的重复利用，追求前端团队职能价值的最大化 2. 更新前端开发体系 业界推崇CMD模块化思想</description></item><item><title>通用 CSS 笔记、建议与指导</title><link>/post/2015/3/</link><pubDate>Thu, 30 Jul 2015 00:00:00 +0000</pubDate><guid>/post/2015/3/</guid><description>通用 CSS 笔记、建议与指导 原文 在参与规模庞大、历时漫长且参与人数众多的项目时，所有开发者遵守如下规则极为重要： 保持 CSS 便于维护 保持代码清晰易懂 保持</description></item><item><title>有趣的CSS技巧</title><link>/post/2015/2015-07-24/</link><pubDate>Fri, 24 Jul 2015 00:00:00 +0000</pubDate><guid>/post/2015/2015-07-24/</guid><description>知乎上发现一个提问《CSS 有什么奇技淫巧？》，看了一下果然很&amp;quot;奇淫&amp;quot;呀。 虽然有的我已经在使用了，但觉得在此记录总结一番，</description></item><item><title>关于CSS3 font-face的探究</title><link>/post/2015/2015-07-23/</link><pubDate>Thu, 23 Jul 2015 00:00:00 +0000</pubDate><guid>/post/2015/2015-07-23/</guid><description>当前各个浏览器都支持CSS3的自定义字体(@font-face)，利用font-face我们可以将网页中常用到的各种小图标统一制作成字体，这</description></item><item><title>CSS Reset</title><link>/post/2015/2015-07-22/</link><pubDate>Wed, 22 Jul 2015 00:00:00 +0000</pubDate><guid>/post/2015/2015-07-22/</guid><description>CSS Reset 下面我常用到的CSS Reset /* CSS Reset */ html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend,</description></item><item><title>Slider</title><link>/post/2015/1/</link><pubDate>Wed, 22 Jul 2015 00:00:00 +0000</pubDate><guid>/post/2015/1/</guid><description>将用到的jQuery Slider搜集一下，方便懒人使用 sliderjs 好用的轮播图，左右推拉效果，但不会有到最后一个图又突然回头继续滑动的毛病，个人觉得比</description></item><item><title>:before和:after的一些惊人用法</title><link>/post/2015/1/</link><pubDate>Fri, 12 Jun 2015 00:00:00 +0000</pubDate><guid>/post/2015/1/</guid><description>清除浮动 clearfix hack 如果父元素容器里面的子元素是浮动元素的话，我们一般需要在父元素闭合前添加一个clear:both的元素用于清除浮动从而能使父容器</description></item><item><title>CSS伪类元素:before和:after</title><link>/post/2015/2015-06-12/</link><pubDate>Fri, 12 Jun 2015 00:00:00 +0000</pubDate><guid>/post/2015/2015-06-12/</guid><description>:before和:after的作用就是在指定的元素内容（而不是元素本身）之前或者之后插入一个包含content属性指定内容的行内元素，最基本</description></item><item><title>Github值得关注的前端项目</title><link>/post/2015/2015-05-29/</link><pubDate>Fri, 29 May 2015 00:00:00 +0000</pubDate><guid>/post/2015/2015-05-29/</guid><description>综合/资源 frontend-dev-bookmarks 一个巨大的前端开发资源清单。 front-end-collect 分享自己长期关注的前端开发相关的优秀网站、博客、以及活跃开发者。 Front-end-Interview-questions 史上最全前端开发面试问题及答案 f2e-hub</description></item></channel></rss>